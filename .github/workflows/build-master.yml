name: Build and Release

on:
  pull_request:
    branches:
      - main
    types: ["closed"]

jobs:
  verify-labels:
    runs-on: ubuntu-latest
    outputs:
      contains-deploy-label: ${{ steps.verify-labels.outputs.contains-deploy-label }}
    steps:
      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 #v3.5.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Verify labels
        id: verify-labels
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [[ -n $(gh pr view --json labels --jq '.labels[].name | select(startswith("deploy-"))') ]]; then
            echo "contains-deploy-label=true" >> $GITHUB_OUTPUT
          else
            echo "contains-deploy-label=false" >> $GITHUB_OUTPUT
          fi

  create-release:
    needs: verify-labels
    runs-on: ubuntu-latest
    if: needs.verify-labels.outputs.contains-deploy-label == 'false'
    env:
      GH_TOKEN: ${{ secrets.PAT }}
    steps:
      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 #v3.5.0

      - name: Get next version
        id: get-next-version
        run: |
          git fetch --tags
          current_tag=$(git tag -l --sort=-v:refname | head -n 1)
          echo "next_version=$(echo $current_tag | awk -F. -v OFS=. '{$NF = $NF + 1;} 1')" >> $GITHUB_OUTPUT

      - name: Create release
        run: |
          git config --local user.email "carlos.castro@jumo.world"
          git config --local user.name "Carlos Castro"
          git tag -a ${{ steps.get-next-version.outputs.next_version }} -m "Release ${{ steps.get-next-version.outputs.next_version }}"
          git push origin ${{ steps.get-next-version.outputs.next_version }}
          gh auth status
          gh release create ${{ steps.get-next-version.outputs.next_version }} \
            --generate-notes \

